# This is a copy of the upstream conda recipe for this package
# hosted at github.com/conda-forge/lal-feedstock and licensed
# under the terms of the BSD 3-Clause license.
# This is only for CI purposes, and should not be considered
# production-ready at any time.

{% set name = "lalsimulation" %}
{% set version = "@VERSION@".replace('-', '.') %}
{% set url = "file://@TARBALL@" %}
{% set sha256 = "@SHA256@" %}

# dependencies
{% set lal_version = "@MIN_LAL_VERSION@a0" %}
{% set swig_version = "@MIN_SWIG_VERSION@" %}
{% set numpy_version = "@MIN_NUMPY_VERSION@" %}

package:
  name: "{{ name }}"
  version: "{{ version }}"

source:
  url: "{{ url }}"
  sha256: "{{ sha256 }}"

build:
  number: 9999
  skip: true  # [win]

requirements:
  build:
    - {{ compiler('c') }}
    - help2man
    - llvm-openmp  # [osx]
    - make
    - pkg-config >=0.18.0
    - swig >={{ swig_version }}
  host:
    - gsl
    - lal >={{ lal_version }}
    - libgomp  # [linux]
    - llvm-openmp  # [osx]
  run:
    - gsl
    - lal >={{ lal_version }}
    - llvm-openmp  # [osx]

test:
  commands:
    - lalsimulation_version --verbose
    - lalsim-bh-qnmode -l 0 -m 0 -s 0
    - lalsim-bh-ringdown -M 10 -a 0 -r 100 -e 0.001 -i 0 -l 2 -m 2
    - lalsim-bh-sphwf -a 0 -l 2 -m 2 -s 0
    - lalsim-burst -w SineGaussian -q 10 -f 100 -H 1e-21 1> /dev/null
    - lalsim-detector-noise -C -t 1 -r 10
    - lalsim-detector-strain --help
    - lalsim-inject --help
    - lalsim-inspiral > /dev/null
    - lalsim-ns-eos-table -n ALF1 1> /dev/null
    - lalsim-ns-mass-radius -n ALF1 1> /dev/null
    - lalsim-ns-params -n ALF1
    - lalsim-sgwb --geo -t 1 -r 100 -W 1 1> /dev/null
    - lalsim-unicorn --help

outputs:
  - name: lalsimulation
    build:
      run_exports:
        - {{ pin_subpackage("lalsimulation", max_pin="x.x") }}

  - name: python-lalsimulation
    script: install-python.sh
    build:
      error_overdepending: true
      error_overlinking: true
      ignore_run_exports:
        # ignore run_exports from python's recipe
        - python
    requirements:
      build:
        - {{ compiler('c') }}
        - help2man
        - make
        - pkg-config >=0.18.0
        - swig >={{ swig_version }}
      host:
        - {{ pin_subpackage('lalsimulation', exact=True) }}
        - numpy
        - python
      run:
        - gsl
        - lal >={{ lal_version }}
        - {{ pin_subpackage('lalsimulation', exact=True) }}
        - {{ pin_compatible('numpy') }}
        - python
        - python-lal >={{ lal_version }}
    test:
      requires:
        - mock  # [py<33]
        - pathlib  # [py<34]
        - pytest >=4.0.0a0
      source_files:
        - python/Makefile
        - test/python
      commands:
        - python -m pytest -rs -v --junit-xml=junit.xml test/python
      imports:
        - lalsimulation
        - lalsimulation.nrfits
    about:
      home: "https://wiki.ligo.org/Computing/LALSuite"
      doc_url: "https://lscsoft.docs.ligo.org/lalsuite/lalsimulation/"
      dev_url: "https://git.ligo.org/lscsoft/lalsuite/"
      license: "GPL-2.0-or-later"
      license_family: "GPL"
      license_file: "COPYING"
      summary: "LSC Algorithm Simulation Library"
      description: |
        The LSC Algorithm Simulation Library for gravitational wave data
        analysis.
        This package contains the python bindings.

about:
  home: "https://wiki.ligo.org/Computing/LALSuite"
  doc_url: "https://docs.ligo.org/lscsoft/lalsuite/lalsimulation/"
  dev_url: "https://git.ligo.org/lscsoft/lalsuite/"
  license: "GPL-2.0-or-later"
  license_family: "GPL"
  license_file: "COPYING"
  summary: "LSC Algorithm Simulation Library"
  description: |
    The LSC Algorithm Simulation Library for gravitational wave data
    analysis.
    This package contains the shared-object libraries needed to run
    applications that use the LAL Simulation library. If you want to
    install the Python bindings, please install the associated
    python-lalsimulation package.

extra:
  recipe-maintainers:
    - duncanmmacleod
    - skymoo
