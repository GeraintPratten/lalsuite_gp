# This is a copy of the upstream conda recipe for this package
# hosted at github.com/conda-forge/lal-feedstock and licensed
# under the terms of the BSD 3-Clause license.
# This is only for CI purposes, and should not be considered
# production-ready at any time.

{% set name = "lal" %}
{% set version = "@VERSION@".replace('-', '.') %}
{% set url = "file://@TARBALL@" %}
{% set sha256 = "@SHA256@" %}

{% set swig_version = "@MIN_SWIG_VERSION@" %}
{% set numpy_version = "@MIN_NUMPY_VERSION@" %}

package:
  name: {{ name }}
  version: {{ version }}

source:
  url: {{ url }}
  sha256: {{ sha256 }}

build:
  error_overdepending: true
  error_overlinking: true
  ignore_run_exports:
    - blas
    # run_exports parsing for fftw is broken, so we ignore it
    # manually, for now
    - fftw
  number: 9999
  skip: true  # [win]
  string: "{{ fft_impl }}_h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}"

requirements:
  build:
    - {{ compiler('c') }}
    - pkg-config >=0.18.0
    - make
    - bc
    - swig >={{ swig_version }}
  host:
    - fftw * nompi*  # [fft_impl == "fftw"]
    - gsl
    - hdf5
    - mkl-devel {{ mkl }}  # [fft_impl == "mkl"]
    - zlib
  run:
    - fftw  # [fft_impl == "fftw"]
    - gsl
    - hdf5
    - zlib

test:
  commands:
    - lal_version --verbose
    - lal_simd_detect

outputs:
  - name: lal
    build:
      run_exports:
        - {{ pin_subpackage("lal", max_pin="x.x") }}

  - name: python-lal
    script: install-python.sh
    build:
      error_overdepending: true
      error_overlinking: true
      ignore_run_exports:
        # ignore run_exports from python's recipe
        - python
      string: "{{ fft_impl }}_py{{ py }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}"
    requirements:
      build:
        - {{ compiler('c') }}
        - make
        - pkg-config >=0.18.0
        - swig >={{ swig_version }}
      host:
        - gsl
        - {{ pin_subpackage('lal', exact=True) }}
        - mkl-devel {{ mkl }}  # [fft_impl == "mkl"]
        - numpy
        - python
      run:
        # NOTE: on linux, python-lal links the LAL dependencies
        #       as well so we have to list them here. why this
        #       doesn't happen on osx, I'm not sure.
        - fftw  # [linux and fft_impl == "fftw"]
        - gsl
        - hdf5  # [linux]
        - {{ pin_subpackage('lal', exact=True) }}
        - python-ligo-lw
        - ligo-segments
        - lscsoft-glue >=@MIN_GLUE_VERSION@
        - mkl  # [fft_impl == "mkl"]
        - {{ pin_compatible('numpy') }}
        - python
        - python-dateutil
        - scipy
        - six
        - zlib  # [linux]
    test:
      requires:
        - freezegun
        - mock  # [py<33]
        - pathlib  # [py<34]
        - pytest >=4.0.0a0
      source_files:
        - python/Makefile
        - test/python
      commands:
        - python -m pytest -rs -v --junit-xml=junit.xml test/python
      imports:
        - lal
        - lal.antenna
        - lal.gpstime
        - lal.rate
        - lal.series
        - lal.utils
    about:
      home: "https://wiki.ligo.org/Computing/LALSuite"
      doc_url: "https://lscsoft.docs.ligo.org/lalsuite/lal/"
      dev_url: "https://git.ligo.org/lscsoft/lalsuite/"
      license: "GPL-2.0-or-later"
      license_family: "GPL"
      license_file: "COPYING"
      summary: "LSC Algorithm Library"
      description: |
        The LSC Algorithm Library for gravitational wave data analysis.
        This package contains the Python bindings.

about:
  home: "https://wiki.ligo.org/Computing/LALSuite"
  doc_url: "https://lscsoft.docs.ligo.org/lalsuite/lal/"
  dev_url: "https://git.ligo.org/lscsoft/lalsuite/"
  license: "GPL-2.0-or-later"
  license_family: "GPL"
  license_file: "COPYING"
  summary: "LSC Algorithm Library"
  description: |
    The LSC Algorithm Library for gravitational wave data analysis.
    This package contains the shared-object libraries needed to run
    applications that use the LAL library.  If you want to install
    the Python bindings, please install the associated python-lal
    package.

extra:
  recipe-maintainers:
    - duncanmmacleod
    - skymoo
